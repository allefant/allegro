[bitmaps]
allegro=../examples/data/allegro.pcx
green=../examples/data/green.png
bkg=../examples/data/bkg.png

# We can't assume that a backbuffer with alpha is available, so draw
# to a temporary bitmap.
[blend template]
op0=b = al_create_bitmap(640, 480)
op1=al_set_target_bitmap(b)
op2=al_draw_tinted_scaled_bitmap(allegro, #aaaaaa80, 0, 0, 320, 200, 0, 0, 640, 480, 0)
op3=al_set_blender(mode, src, ALLEGRO_ONE)
op4=al_draw_bitmap(green, x, 5, 0)
op5=al_set_blender(mode, src, ALLEGRO_ZERO)
op6=al_draw_bitmap(green, x, 125, 0)
op7=al_set_blender(mode, src, ALLEGRO_ALPHA)
op8=al_draw_bitmap(green, x, 245, 0)
op9=al_set_blender(mode, src, ALLEGRO_INVERSE_ALPHA)
op10=al_draw_bitmap(green, x, 365, 0)
op11=al_set_target_bitmap(target)
op12=al_set_blender(ALLEGRO_ADD, ALLEGRO_ONE, ALLEGRO_ZERO)
op13=al_draw_bitmap(bkg, 0, 0, 0)
op14=al_set_separate_blender(ALLEGRO_ADD, ALLEGRO_ALPHA, ALLEGRO_INVERSE_ALPHA, ALLEGRO_ADD, ALLEGRO_ZERO, ALLEGRO_ONE)
op15=al_draw_bitmap(b, 0, 0, 0)
x=140

[blend add]
extend=blend template
mode=ALLEGRO_ADD

[blend d-s]
extend=blend template
mode=ALLEGRO_DEST_MINUS_SRC

[blend s-d]
extend=blend template
mode=ALLEGRO_SRC_MINUS_DEST


[test blend add src_one]
extend=blend add
src=ALLEGRO_ONE
hash=ae324d0c
sig=FCD9PNGlHJJqJIHHHHEDL3566KKDCH78T6QCBCCBEFICH9A76MM5cBCAa66676BBAP7B8ALAABJ8CUBQA

[test blend add src_zero]
extend=blend add
src=ALLEGRO_ZERO
hash=da44dbae
sig=FCA9BAGHHJJJJIHHHHED665767KDC676766CBCCBEFICH9A66A95ABCA866676BBA77A7A6AAB6886B5A

[test blend add src_alpha]
extend=blend add
src=ALLEGRO_ALPHA
hash=cf36ef9e
sig=FCB9NMGlHJJoJIHHHHEDJ5576KKDCH76T6PCBCCBEFICH9A66LL5bBCAY66676BBAM7A9ALAABI89TBPA

[test blend add src_inverse_alpha]
extend=blend add
src=ALLEGRO_INVERSE_ALPHA
hash=33b62647
sig=FCB9DCGIHJJMJIHHHHED655566KDC676666CBCCBEFICH9A76BB5BBCA966676BBA87B7A6AAB6896B5A

[test blend d-s src_one]
extend=blend d-s
src=ALLEGRO_ONE
hash=11fbd60c
sig=FC9966G6HJJ7JIHHHHED665767KDC676766CBCCBEFICH9A666556BCA666676BBA76A7A7AAB6886B6A

[test blend d-s src_zero]
extend=blend d-s
src=ALLEGRO_ZERO
hash=da44dbae
sig=FCA9BAGHHJJJJIHHHHED665767KDC676766CBCCBEFICH9A66A95ABCA866676BBA77A7A6AAB6886B5A

[test blend d-s src_alpha]
extend=blend d-s
src=ALLEGRO_ALPHA
hash=b8bba9ed
sig=FC9977G6HJJ7JIHHHHED665767KDC676766CBCCBEFICH9A666556BCA666676BBA86A7A7AAB6886B6A

[test blend d-s src_inverse_alpha]
extend=blend d-s
src=ALLEGRO_INVERSE_ALPHA
hash=019c7c01
sig=FC9998GGHJJHJIHHHHED665767KDC676766CBCCBEFICH9A66985ABCA766676BBA76A7A7AAB6886B6A

[test blend s-d src_one]
extend=blend s-d
src=ALLEGRO_ONE
hash=bcdcf7f7
sig=FC666667HJJ766676HEDL3566KKDCH78T6QCBCCBEFICH9A665559BCAC66676BBAL5775KAABH67T7PA

[test blend s-d src_zero]
extend=blend s-d
src=ALLEGRO_ZERO
hash=43e902e7


[test blend s-d src_alpha]
extend=blend s-d
src=ALLEGRO_ALPHA
hash=646bf0bd
sig=FC666667HJJ766676HEDJ5576KKDCH76T6PCBCCBEFICH9A666659BCAB66676BBAJ6785KAABG67S7PA


[test blend s-d src_inverse_alpha]
extend=blend s-d
src=ALLEGRO_INVERSE_ALPHA
hash=41f5e2e9
sig=FC666666HJJ666676HED655566KDC676666CBCCBEFICH9A666556BCA666676BBA767757AAB666676A

